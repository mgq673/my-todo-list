{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/error-handler/error-handler.service.ts","webpack:///./src/app/error-handler/error.ts","webpack:///./src/app/error-handler/error/error.component.css","webpack:///./src/app/error-handler/error/error.component.html","webpack:///./src/app/error-handler/error/error.component.ts","webpack:///./src/app/material/material.module.ts","webpack:///./src/app/shared/HttpsHeaders.ts","webpack:///./src/app/shared/interceptors/custom-http-interceptor.service.ts","webpack:///./src/app/shared/interceptors/index.ts","webpack:///./src/app/shared/pipes.ts","webpack:///./src/app/shared/task-status.enum.ts","webpack:///./src/app/shared/task.service.ts","webpack:///./src/app/shared/user.service.ts","webpack:///./src/app/store/to-do.actions.ts","webpack:///./src/app/store/to-do.effects.ts","webpack:///./src/app/store/to-do.reducer.ts","webpack:///./src/app/todo/editable/editable.component.css","webpack:///./src/app/todo/editable/editable.component.html","webpack:///./src/app/todo/editable/editable.component.ts","webpack:///./src/app/todo/models/List.ts","webpack:///./src/app/todo/models/task.ts","webpack:///./src/app/todo/new-task/new-task.component.css","webpack:///./src/app/todo/new-task/new-task.component.html","webpack:///./src/app/todo/new-task/new-task.component.ts","webpack:///./src/app/todo/to-do-item/to-do-item.component.css","webpack:///./src/app/todo/to-do-item/to-do-item.component.html","webpack:///./src/app/todo/to-do-item/to-do-item.component.ts","webpack:///./src/app/todo/to-do-list/to-do-list.component.css","webpack:///./src/app/todo/to-do-list/to-do-list.component.html","webpack:///./src/app/todo/to-do-list/to-do-list.component.ts","webpack:///./src/app/todo/to-do-tasks/to-do-tasks.component.css","webpack:///./src/app/todo/to-do-tasks/to-do-tasks.component.html","webpack:///./src/app/todo/to-do-tasks/to-do-tasks.component.ts","webpack:///./src/app/user-managment/login/login.component.css","webpack:///./src/app/user-managment/login/login.component.html","webpack:///./src/app/user-managment/login/login.component.ts","webpack:///./src/app/user-managment/models/user.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".background{\\r\\n  background-color: #ccc;\\r\\n  height: 100%;\\r\\n}\\r\\n\\r\\n.background-title{\\r\\n  background-color: azure;\\r\\n  margin-bottom: 20px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxzQkFBc0I7RUFDdEIsWUFBWTtBQUNkOztBQUVBO0VBQ0UsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJhY2tncm91bmR7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2NjYztcclxuICBoZWlnaHQ6IDEwMCU7XHJcbn1cclxuXHJcbi5iYWNrZ3JvdW5kLXRpdGxle1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGF6dXJlO1xyXG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbn0iXX0= */\"","module.exports = \"\\n<div >\\n\\n<div class=\\\"container background-title\\\"\\nfxLayout\\nfxLayout.xs=\\\"column\\\"\\nfxLayoutAlign=\\\"center\\\"\\n\\nfxLayoutGap.xs=\\\"0\\\">\\n\\n<div fxFlex><app-login></app-login></div>\\n<app-error></app-error>\\n</div>\\n\\n<div class=\\\"container background\\\"\\nfxLayout\\nfxLayout.xs=\\\"column\\\"\\nfxLayoutAlign=\\\"center\\\"\\nfxLayoutGap=\\\"40px\\\"\\nfxLayoutGap.xs=\\\"0\\\" >\\n<div fxFlex=\\\"40%\\\" >\\n  <app-to-do-list></app-to-do-list>\\n</div>\\n<div  fxFlex>\\n  <app-to-do-tasks></app-to-do-tasks>\\n</div>\\n</div>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'todolist';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { EffectsModule } from '@ngrx/effects';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { AppComponent } from './app.component';\nimport { ToDoItemComponent } from './todo//to-do-item/to-do-item.component';\nimport { ToDoListComponent } from './todo/to-do-list/to-do-list.component';\nimport { LoginComponent } from './user-managment/login/login.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CustomMaterialModule } from './material/material.module';\nimport { StoreModule } from '@ngrx/store';\nimport { todoReducer } from './store/to-do.reducer';\nimport { TodoEffects } from './store/to-do.effects';\nimport { NewTaskComponent } from './todo/new-task/new-task.component';\nimport { NonCompletedPipe } from './shared/pipes';\nimport { ToDoTasksComponent } from './todo/to-do-tasks/to-do-tasks.component';\nimport { EditableComponent } from './todo/editable/editable.component';\nimport { httpInterceptorProviders } from './shared/interceptors/index';\nimport { ErrorComponent } from './error-handler/error/error.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ToDoItemComponent,\n    ToDoListComponent,\n    LoginComponent,\n    NewTaskComponent,\n    NonCompletedPipe,\n    ToDoTasksComponent,\n    EditableComponent,\n    ErrorComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    CustomMaterialModule,\n    StoreModule.forRoot({ user: todoReducer }),\n    EffectsModule.forRoot([\n      TodoEffects\n    ]),\n    FlexLayoutModule,\n  ],\n  providers: [\n    httpInterceptorProviders\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable, of, Subject } from 'rxjs';\nimport { Error } from './error';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorHandlerService {\n\n  constructor() { }\n\n  private error = new Error();\n  private subject = new Subject<any>();\n\n  showErrorMessage(err: any) {\n    this.error.message = `Error: ${err.result}`;\n    this.subject.next(this.error);\n  }\n\n  getMessage(): Observable<any> {\n    return this.subject.asObservable();\n  }\n}\n","export class Error {\n  message: string;\n\n  constructor(values: Object = {}) {\n    Object.assign(this, values);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Vycm9yLWhhbmRsZXIvZXJyb3IvZXJyb3IuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \" <span *ngIf='error'>{{ error.message }}</span>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Error } from '../error';\nimport { ErrorHandlerService } from '../error-handler.service';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  error: Error;\n\n  constructor(private errorService: ErrorHandlerService) {\n    this.errorService.getMessage()\n    .subscribe((error) => {\n      this.error = error;\n    });\n   }\n\n  ngOnInit() {\n\n  }\n\n}\n","import {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {NgModule} from '@angular/core';\nimport {\n  MatAutocompleteModule, \n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule,\n} from '@angular/material';\n\n@NgModule({\n  exports: [\n    A11yModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n  ]\n})\nexport class CustomMaterialModule {}\n\n\n/**  Copyright 2019 Google Inc. All Rights Reserved.\n    Use of this source code is governed by an MIT-style license that\n    can be found in the LICENSE file at http://angular.io/license */\n","import { HttpHeaders } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\n\r\nexport const  CustomHttpOptions = () => {\r\n return { headers: new HttpHeaders(environment.httpsHeaders)};\r\n};\r\n\r\n\r\n\r\n\r\n","import { Injectable } from '@angular/core';\nimport {\n  HttpInterceptor, HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { ErrorHandlerService } from 'src/app/error-handler/error-handler.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomHttpInterceptorService implements HttpInterceptor {\n\n  constructor(public errHandlerService: ErrorHandlerService) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if (!request.headers.has('Content-Type')) {\n      request = request.clone({ headers: request.headers.set('Content-Type', 'application/json') });\n    }\n\n    request = request.clone({ headers: request.headers.set('Accept', 'application/json') });\n\n\n    return next.handle(request).pipe(\n      map((event: HttpEvent<any>) => {\n        if (event instanceof HttpResponse) {\n          if (event.body.status === 'fail') {\n            this.errHandlerService.showErrorMessage(event.body);\n            throwError(event);\n          }\n        }\n        return event;\n      }),\n\n      catchError((error: HttpErrorResponse) => {\n        let data = {};\n\n        data = {\n          result: error && error.error.result ? error.error.result : '',\n          status: error.status\n        };\n        this.errHandlerService.showErrorMessage(data);\n        return throwError(error);\n      }));\n  }\n\n}\n\n\n\n\n","/* \"Barrel\" of Http Interceptors */\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { CustomHttpInterceptorService } from './custom-http-interceptor.service';\r\n\r\n\r\n/** Http interceptor providers in outside-in order */\r\nexport const httpInterceptorProviders = [\r\n  { provide: HTTP_INTERCEPTORS, useClass: CustomHttpInterceptorService, multi: true },\r\n\r\n\r\n];\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Task } from '../todo/models/task';\r\nimport { TaskStatus } from './task-status.enum';\r\n\r\n@Pipe({name: 'nonCompleted'})\r\nexport class NonCompletedPipe implements PipeTransform {\r\n  transform(allTasks: Task[], onlyNonCompleted: boolean) {\r\n    return onlyNonCompleted ? allTasks.filter(task => task.status === TaskStatus.NORMAL) : allTasks;\r\n  }\r\n}\r\n","export enum TaskStatus {\n  NORMAL = 'Normal',\n  DONE = 'Done',\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { select, Store } from '@ngrx/store';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/throw';\nimport { environment } from 'src/environments/environment';\nimport { Task } from '../todo/models/task';\nimport { List } from '../todo/models/List';\nimport { CustomHttpOptions } from './HttpsHeaders';\nimport { AppState } from '../app.state';\nimport * as fromReducer from '../store/to-do.reducer';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n\n  private httpOptions = CustomHttpOptions();\n  private loggedInUserId: string;\n  private uriBase = `${environment.apiUrl}`;\n\n  constructor(private http: HttpClient, private store: Store<AppState>) {\n    this.store.pipe(select(fromReducer.getUserId))\n      .subscribe((userId) => {\n        this.loggedInUserId = userId;\n      })\n  }\n\n\n  getTasks(list: List): Observable<Task[]> {\n    return this.http\n      .get(`${this.uriBase}/lists/${list.id}/tasks`, { params: { id: this.loggedInUserId } })\n\n      .map(response => {\n        const tasks = response['result'].tasks;\n        return tasks.map((task) => new Task({ id: task._id, listId: task.listid, title: task.title, status: task.status }));\n      });\n  }\n\n\n  addTask(payload): Observable<any> {\n    const { list, title } = payload;\n    return this.http\n      // .post(`${this.uriBase}/lists/${list.id}/tasks`, { title }, this.httpOptions)\n      .post(`${this.uriBase}/lists/${list.id}/tasks`, { title })\n\n  }\n\n  removeTask(payload): Observable<any> {\n    const { id, list } = payload;\n    return this.http\n      .delete(`${this.uriBase}/lists/${list.id}/tasks/${id}`, this.httpOptions)\n  }\n\n  updateTask(payload): Observable<any> {\n    const { task, list } = payload;\n    const editPayload = { title: task.title, status: task.status };\n    return this.http\n      .put(`${this.uriBase}/lists/${list.id}/tasks/${task.id}`, editPayload, this.httpOptions);\n  }\n\n  removeManyTasks(payload): Observable<any> {\n    const { list } = payload;\n    return this.http\n      .delete(`${this.uriBase}/lists/${list.id}/tasks`, this.httpOptions);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/throw';\n\nimport { environment } from '../../environments/environment';\nimport { CustomHttpOptions } from 'src/app/shared/HttpsHeaders';\nimport { User } from '../user-managment/models/user';\nimport { List } from '../todo/models/List';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  private httpOptions = CustomHttpOptions();\n\n  public login(user): Observable<User> {\n    const payload = { name: user.name };\n\n    return this.http\n      .post(`${environment.apiUrl}/users/login`, payload)\n      .map(response => this.buildUserData(response));\n  }\n\n  public signup(newuser): Observable<User> {\n    const payload = { name: newuser.name };\n\n    return this.http\n      .post(`${environment.apiUrl}/users/signup`, payload)\n      .map(response => this.buildUserData(response));\n  }\n\n  addList(payload): Observable<any> {\n    const { userId, title } = payload;\n    return this.http\n      .post(`${environment.apiUrl}/users/${userId}/lists`, { title }, this.httpOptions )\n      .map(response => this.buildUserData(response));\n  }\n\n\n  private buildUserData(response) {\n    const lists = response.result.lists\n      .map((list) =>\n        new List({ id: list._id, title: list.title, tasks: list.tasks,  counter: list.tasks.length }))\n    return new User\n      ({\n        id: response.result._id,\n        name: response.result.name,\n        Lists: lists\n      });\n  }\n}\n","import { Action } from '@ngrx/store';\r\nimport { List } from '../todo/models/List';\r\nimport {User } from '../user-managment/models/user';\r\n\r\nexport enum ActionTypes {\r\n  LOAD_TASKS = '[TODOLIST] LOAD_TASKS',\r\n  SET_CURRENT_LIST = '[TODOLIST] SET_CURRENT_LIST',\r\n  ADD_NEW_LIST = '[TODOLIST] ADD_NEW_LIST',\r\n  LOAD_LISTS = '[TODOLIST] LOAD_LISTS',\r\n\r\n  ADD_NEW_TASK = '[TODOLIST] ADD_NEW_TASK',\r\n  EditTask = '[TODOLIST] EditTask',\r\n  RemoveTask = '[TODOLIST] RemoveTask',\r\n  MarkAsDone = '[TODOLIST] MarkAsDone',\r\n  RemovAllDoneTask = '[TODOLIST] RemovAllDoneTask',\r\n\r\n  USER_LOGIN = '[USER] USER_LOGIN',\r\n  USER_LOGIN_SUCCESS = '[USER] USER_LOGIN_SUCCESS',\r\n  SIGNUP = '[USER] SIGNUP',\r\n}\r\n\r\nexport class SetCurrentList implements Action {\r\n  readonly type = ActionTypes.SET_CURRENT_LIST;\r\n  constructor(public payload: List) {}\r\n}\r\n\r\nexport class AddNewTask implements Action {\r\n  readonly type = ActionTypes.ADD_NEW_TASK;\r\n  constructor(public payload: any) {}\r\n\r\n}\r\n\r\nexport class AddNewList implements Action {\r\n  readonly type = ActionTypes.ADD_NEW_LIST;\r\n  constructor(public payload: any) {}\r\n\r\n}\r\n\r\nexport class LoadLists implements Action {\r\n  readonly type = ActionTypes.LOAD_LISTS;\r\n  constructor(public payload: any) {}\r\n}\r\n\r\nexport class RemoveTask implements Action {\r\n  readonly type = ActionTypes.RemoveTask;\r\n  constructor(public payload: any) {}\r\n\r\n}\r\n\r\n\r\nexport class RemovAllDoneTask implements Action {\r\n  readonly type = ActionTypes.RemovAllDoneTask;\r\n  constructor(public payload: any) {}\r\n\r\n}\r\n\r\nexport class EditTask implements Action {\r\n  readonly type = ActionTypes.EditTask;\r\n  constructor(public payload: any) {}\r\n\r\n}\r\n\r\nexport class MarkAsDone implements Action {\r\n  readonly type = ActionTypes.MarkAsDone;\r\n  constructor(public payload: any) {}\r\n\r\n}\r\n\r\nexport class LoadTasks implements Action {\r\n  readonly type = ActionTypes.LOAD_TASKS;\r\n  constructor(public payload: any) {}\r\n}\r\n\r\nexport class UserLogin implements Action {\r\n  readonly type = ActionTypes.USER_LOGIN;\r\n  constructor(public payload: any) {}\r\n}\r\n\r\nexport class UserLoginSuccess implements Action {\r\n  readonly type = ActionTypes.USER_LOGIN_SUCCESS;\r\n  constructor(public payload: any) {}\r\n}\r\n\r\nexport class Signup implements Action {\r\n  readonly type = ActionTypes.SIGNUP;\r\n  constructor(public payload: any) {}\r\n}\r\n\r\nexport type All =\r\n    | SetCurrentList\r\n    | AddNewTask\r\n    | RemoveTask\r\n    | UserLogin\r\n    | LoadTasks\r\n    | UserLoginSuccess\r\n    | EditTask\r\n    | MarkAsDone\r\n    | RemovAllDoneTask\r\n    | Signup\r\n    | AddNewList\r\n    | LoadLists\r\n    ;\r\n","import { map, mergeMap, mapTo } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { Actions, Effect, ofType } from '@ngrx/effects';\r\n\r\nimport * as TodoAction from './to-do.actions';\r\nimport { UserService } from '../shared/user.service';\r\nimport { TaskService } from '../shared/task.service';\r\n\r\n@Injectable()\r\nexport class TodoEffects {\r\n\r\n  @Effect() setCurrentList$ = this.actions$\r\n    .pipe(\r\n      ofType(TodoAction.ActionTypes.SET_CURRENT_LIST),\r\n      mergeMap((action: TodoAction.SetCurrentList) => this.taskService.getTasks(action.payload)\r\n        .pipe(\r\n          map((tasks) => new TodoAction.LoadTasks({ tasks }))\r\n        ))\r\n    );\r\n\r\n\r\n\r\n  @Effect() userLogin$ = this.actions$\r\n    .pipe(\r\n      ofType(TodoAction.ActionTypes.USER_LOGIN),\r\n      mergeMap((action: TodoAction.UserLogin) => this.userService.login(action.payload)\r\n        .pipe(\r\n          map((data) => new TodoAction.UserLoginSuccess(data))\r\n        )\r\n      )\r\n    );\r\n\r\n\r\n  @Effect() userLoginSuccess$ = this.actions$\r\n    .pipe(\r\n      ofType(TodoAction.ActionTypes.USER_LOGIN_SUCCESS),\r\n      // map((data: TodoAction.UserLoginSuccess) => new TodoAction.SetCurrentList(data.payload))\r\n      map((data: TodoAction.UserLoginSuccess) => new TodoAction.SetCurrentList(data.payload.Lists[0]))\r\n\r\n    );\r\n\r\n\r\n\r\n  @Effect() signup$ = this.actions$\r\n    .pipe(\r\n      ofType(TodoAction.ActionTypes.SIGNUP),\r\n      mergeMap((action: TodoAction.Signup) => this.userService.signup(action.payload)\r\n        .pipe(\r\n          map((data) => new TodoAction.UserLoginSuccess(data))\r\n        )\r\n      )\r\n    );\r\n\r\n    @Effect() addList$ = this.actions$\r\n    .pipe(\r\n      ofType(TodoAction.ActionTypes.ADD_NEW_LIST)\r\n      , mergeMap((action: TodoAction.AddNewList) => this.userService.addList(action.payload)\r\n        .pipe(\r\n          map((data) => new TodoAction.UserLoginSuccess(data))\r\n        )\r\n      )\r\n\r\n    );\r\n\r\n  @Effect() addTask$ = this.actions$\r\n    .pipe(\r\n      ofType(TodoAction.ActionTypes.ADD_NEW_TASK)\r\n      , mergeMap((action: TodoAction.AddNewTask) =>\r\n        this.taskService.addTask(action.payload)\r\n          .map((data) => new TodoAction.SetCurrentList(action.payload.list)\r\n          )\r\n      )\r\n\r\n    );\r\n\r\n  @Effect() deleteTask$ = this.actions$\r\n    .pipe(\r\n      ofType(TodoAction.ActionTypes.RemoveTask)\r\n      , mergeMap((action: TodoAction.RemoveTask) =>\r\n        this.taskService.removeTask(action.payload)\r\n          .map((data) => new TodoAction.SetCurrentList(action.payload.list)\r\n          )\r\n      )\r\n\r\n    );\r\n\r\n\r\n\r\n  @Effect() editTitleTask$ = this.actions$\r\n    .pipe(\r\n      ofType(TodoAction.ActionTypes.EditTask)\r\n      , mergeMap((action: TodoAction.EditTask) =>\r\n        this.taskService.updateTask(action.payload)\r\n          .map((data) => new TodoAction.SetCurrentList(action.payload.list)\r\n          )\r\n      )\r\n\r\n    );\r\n\r\n\r\n  @Effect() deleteAlDoneTask$ = this.actions$\r\n    .pipe(\r\n      ofType(TodoAction.ActionTypes.RemovAllDoneTask)\r\n      , mergeMap((action: TodoAction.RemovAllDoneTask) =>\r\n        this.taskService.removeManyTasks(action.payload)\r\n          .map((data) => new TodoAction.SetCurrentList(action.payload.list)\r\n          )\r\n      )\r\n\r\n    );\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private taskService: TaskService,\r\n    private userService: UserService,\r\n  ) { }\r\n}\r\n","import {\r\n  ActionTypes,\r\n  All as AllTodoListActions\r\n} from './to-do.actions';\r\nimport { AppState } from '../app.state';\r\nimport { createFeatureSelector, createSelector } from '@ngrx/store';\r\n\r\n\r\nexport const initialState: AppState = {\r\n  user: null,\r\n  list: null,\r\n  counter: 0\r\n};\r\n\r\nexport function todoReducer(state: AppState = initialState, action: AllTodoListActions) {\r\n  switch (action.type) {\r\n    case ActionTypes.SET_CURRENT_LIST:\r\n      console.log('todoReducer SET_CURRENT_LIST ');\r\n      return { ...state, list: action.payload };\r\n\r\n    case ActionTypes.USER_LOGIN_SUCCESS:\r\n      console.log('todoReducer USER_LOGIN_SUCCESS:');\r\n      return { ...state, user: action.payload };\r\n\r\n    case ActionTypes.LOAD_TASKS:\r\n      console.log('todoReducer LOAD_TASKS:' + JSON.stringify(action));\r\n      return createLoadTasksState(state, action);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction createLoadTasksState(state: AppState, action: AllTodoListActions) {\r\n\r\n  const list = state.list;\r\n  const user = state.user;\r\n\r\n  const userList = user.Lists.filter(l => l.id === list.id)[0];\r\n  const newList = { ...list, tasks: action.payload.tasks, counter: action.payload.tasks.length };\r\n  const li = user.Lists.indexOf(userList);\r\n  const newUser = { ...user };\r\n  newUser.Lists[li] = newList;\r\n  const counters = newUser.Lists.map(l => l.counter);\r\n  const sum = counters.reduce((sum, el) => sum += el);\r\n  const newState = { ...state, list: newList, newUser, counter: sum }\r\n\r\n  return newState;\r\n}\r\n\r\nexport const getTodoList = (state) => state.user;\r\nexport const getUserData = (state) => state.user;\r\n\r\nconst getCustomerFeatureState = createFeatureSelector<AppState>('user');\r\n\r\nexport const getUserId = createSelector(\r\n  getCustomerFeatureState,\r\n  (state: AppState) => (state.user) ? state.user.id : null\r\n);\r\n\r\nexport function currentListCounterSelector(state: AppState): number {\r\n  return state.list.tasks.length;\r\n}\r\n","module.exports = \".title-edit{\\r\\n  width: calc(100% - 40px);\\r\\n  min-width:180px;\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdG9kby9lZGl0YWJsZS9lZGl0YWJsZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usd0JBQXdCO0VBQ3hCLGVBQWU7QUFDakIiLCJmaWxlIjoic3JjL2FwcC90b2RvL2VkaXRhYmxlL2VkaXRhYmxlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudGl0bGUtZWRpdHtcclxuICB3aWR0aDogY2FsYygxMDAlIC0gNDBweCk7XHJcbiAgbWluLXdpZHRoOjE4MHB4O1xyXG59XHJcblxyXG4iXX0= */\"","module.exports = \"<div>\\n<mat-form-field class=\\\"title-edit\\\" >\\n  <input  autofocus matInput [(ngModel)]=\\\"model.title\\\" />\\n</mat-form-field>\\n\\n\\n\\n<button\\n  mat-icon-button\\n  class=\\\"card-button\\\"\\n  (click)=\\\"done()\\\"\\n\\n>\\n  <mat-icon>done</mat-icon>\\n</button>\\n\\n</div>\\n\"","import { Component, OnInit, EventEmitter, Input, Output } from '@angular/core';\n\n\n@Component({\n  selector: 'app-editable',\n  templateUrl: './editable.component.html',\n  styleUrls: ['./editable.component.css']\n})\n\nexport class EditableComponent implements OnInit {\n\n  @Input() model;\n\n  @Output() doneEdit = new EventEmitter<any>();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  done( ) {\n    this.doneEdit.emit(this.model);\n  }\n}\n","import { Task } from './task';\r\n\r\nexport class List {\r\n  id: number;\r\n  title: string;\r\n  tasks: Task[];\r\n  counter: number;\r\n  \r\n  constructor(values: Object = {}) {\r\n    Object.assign(this, values);\r\n  }\r\n}\r\n","export class Task {\r\n  id: string;\r\n  title: string;\r\n  listId: string;\r\n  status: string;\r\n\r\n  constructor(values: Object = {}) {\r\n    Object.assign(this, values);\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RvZG8vbmV3LXRhc2svbmV3LXRhc2suY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"\\n\\n<button mat-icon-button class=\\\"card-button\\\" (click)=\\\"toggleAdd()\\\" *ngIf=\\\"!addNewFlag\\\">\\n    <mat-icon>add</mat-icon>\\n  </button>\\n\\n  <app-editable [model]=\\\"task\\\" (doneEdit)=\\\"addTask($event)\\\"  *ngIf=\\\"addNewFlag\\\"></app-editable>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Task } from '../models/task';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../app.state';\nimport * as TodoActions from '../../store/to-do.actions';\nimport * as fromReducer from '../../store/to-do.reducer';\nimport { List } from '../models/List';\n\n@Component({\n  selector: 'app-new-task',\n  templateUrl: './new-task.component.html',\n  styleUrls: ['./new-task.component.css']\n})\nexport class NewTaskComponent implements OnInit {\n\n  task: Task;\n  addNewFlag = false;\n  private list: List;\n\n  constructor(private store: Store<AppState>) {\n    this.store.select(fromReducer.getTodoList).\n      subscribe((state: AppState) => {\n        this.list = state.list;\n      });\n  }\n\n  ngOnInit() {\n  }\n\n  toggleAdd(): void {\n    this.addNewFlag = true;\n    this.task = new Task();\n  }\n\n  addTask(): void {\n    this.store.dispatch(new TodoActions.AddNewTask({ list: this.list, title: this.task.title }));\n    this.addNewFlag = false;\n  }\n\n}\n","module.exports = \".example-full-width{\\r\\n  width:100%;\\r\\n}\\r\\n\\r\\n\\r\\n.example-form {\\r\\n  min-width: 350px;\\r\\n  max-width: 500px;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n\\r\\n.card-button{\\r\\n  float: right;\\r\\n}\\r\\n\\r\\n\\r\\n.item-card:not last-of-type\\r\\n{\\r\\n  margin-bottom: 5px;\\r\\n  min-width: 180px;\\r\\n}\\r\\n\\r\\n\\r\\n.done-cb{\\r\\n  width: calc( 100% - 80px );\\r\\n  display: inline-block;\\r\\n}\\r\\n\\r\\n\\r\\n.task-completed{\\r\\n  text-decoration: line-through;\\r\\n  color:grey;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdG9kby90by1kby1pdGVtL3RvLWRvLWl0ZW0uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFVBQVU7QUFDWjs7O0FBR0E7RUFDRSxnQkFBZ0I7RUFDaEIsZ0JBQWdCO0VBQ2hCLFdBQVc7QUFDYjs7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7OztBQUVBOztFQUVFLGtCQUFrQjtFQUNsQixnQkFBZ0I7QUFDbEI7OztBQUVBO0VBQ0UsMEJBQTBCO0VBQzFCLHFCQUFxQjtBQUN2Qjs7O0FBQ0E7RUFDRSw2QkFBNkI7RUFDN0IsVUFBVTtBQUNaIiwiZmlsZSI6InNyYy9hcHAvdG9kby90by1kby1pdGVtL3RvLWRvLWl0ZW0uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLWZ1bGwtd2lkdGh7XHJcbiAgd2lkdGg6MTAwJTtcclxufVxyXG5cclxuXHJcbi5leGFtcGxlLWZvcm0ge1xyXG4gIG1pbi13aWR0aDogMzUwcHg7XHJcbiAgbWF4LXdpZHRoOiA1MDBweDtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLmNhcmQtYnV0dG9ue1xyXG4gIGZsb2F0OiByaWdodDtcclxufVxyXG5cclxuLml0ZW0tY2FyZDpub3QgbGFzdC1vZi10eXBlXHJcbntcclxuICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbiAgbWluLXdpZHRoOiAxODBweDtcclxufVxyXG5cclxuLmRvbmUtY2J7XHJcbiAgd2lkdGg6IGNhbGMoIDEwMCUgLSA4MHB4ICk7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG59XHJcbi50YXNrLWNvbXBsZXRlZHtcclxuICB0ZXh0LWRlY29yYXRpb246IGxpbmUtdGhyb3VnaDtcclxuICBjb2xvcjpncmV5O1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<mat-card class=\\\"item-card\\\">\\n  <mat-card-content>\\n    <section>\\n      <mat-checkbox *ngIf=\\\"!editable\\\" class=\\\"done-cb\\\" [checked]=\\\"isTaskCompleted(task)\\\" [disabled]=\\\"isTaskCompleted(task)\\\" (change)=\\\"markAsDone($event)\\\">\\n        <span class=\\\"task-title\\\" [ngClass]=\\\"{'task-completed' :isTaskCompleted(task)}\\\">{{ task.title }}</span>\\n      </mat-checkbox>\\n\\n      <app-editable [model]=\\\"task\\\" (doneEdit)=\\\"doneEditing($event)\\\" *ngIf=\\\"editable\\\"></app-editable>\\n\\n      <button mat-icon-button class=\\\"card-button\\\" (click)=\\\"delete()\\\" *ngIf=\\\"!editable\\\">\\n          <mat-icon>delete</mat-icon>\\n        </button>\\n\\n      <button mat-icon-button class=\\\"card-button\\\" (click)=\\\"edit()\\\"  *ngIf=\\\"!editable\\\">\\n          <mat-icon>mode_edit</mat-icon>\\n        </button>\\n    </section>\\n  </mat-card-content>\\n</mat-card>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Task } from '../models/task';\nimport {  Store } from '@ngrx/store';\nimport { AppState } from '../../app.state';\nimport * as TodoActions from '../../store/to-do.actions';\nimport * as fromReducer from '../../store/to-do.reducer';\nimport { Observable } from 'rxjs';\nimport { List } from '../models/List';\nimport { TaskStatus } from '../../shared/task-status.enum';\n\n@Component({\n  selector: 'app-to-do-item',\n  templateUrl: './to-do-item.component.html',\n  styleUrls: ['./to-do-item.component.css']\n})\n\nexport class ToDoItemComponent implements OnInit {\n  @Input() task: Task;\n\n  list$: Observable<List>;\n  editable = false;\n\n  constructor(private store: Store<AppState>) {\n    store.select(fromReducer.getTodoList).\n      subscribe(d => this.list$ = d.list);\n  }\n\n  ngOnInit() {\n  }\n\n  delete() {\n    this.store.dispatch(new TodoActions.RemoveTask({ id: this.task.id, list: this.list$ }))\n  }\n\n\n  markAsDone(e) {\n    if (e.checked === true) {\n      this.task.status = 'Done';\n      this.store.dispatch(new TodoActions.EditTask({ task: this.task, list: this.list$ }));\n    }\n\n  }\n\n  edit() {\n    this.editable = true;\n  }\n\n  doneEditing(task) {\n\n    this.store.dispatch(new TodoActions.EditTask({ task: this.task, list: this.list$ }));\n\n    this.editable = false;\n  }\n\n  isTaskCompleted(task: Task) {\n    return task.status === TaskStatus.DONE;\n  }\n}\n","module.exports = \".list-title{\\r\\n  margin: 0 auto;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.lists{\\r\\n  min-height: 20em;\\r\\n  padding: 20px 20px 0;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdG9kby90by1kby1saXN0L3RvLWRvLWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQWM7RUFDZCxlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLG9CQUFvQjtBQUN0QiIsImZpbGUiOiJzcmMvYXBwL3RvZG8vdG8tZG8tbGlzdC90by1kby1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubGlzdC10aXRsZXtcclxuICBtYXJnaW46IDAgYXV0bztcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbi5saXN0c3tcclxuICBtaW4taGVpZ2h0OiAyMGVtO1xyXG4gIHBhZGRpbmc6IDIwcHggMjBweCAwO1xyXG59Il19 */\"","module.exports = \"<div class=\\\"lists\\\"  *ngIf=\\\"lists\\\">\\n\\n<h4 class=\\\"mat-h4\\\">\\n   My ToDo lists:\\n   <mat-chip-list class=\\\"inline-block \\\">\\n    <mat-chip >{{counter }}</mat-chip>\\n</mat-chip-list>\\n   <button mat-icon-button class=\\\"card-button\\\" (click)=\\\"toggleAdd()\\\" *ngIf=\\\"!addNewFlag\\\">\\n    <mat-icon>add</mat-icon>\\n  </button>\\n\\n  <app-editable [model]=\\\"newList\\\" (doneEdit)=\\\"addList($event)\\\"  *ngIf=\\\"addNewFlag\\\"></app-editable>\\n\\n</h4>\\n<mat-toolbar>\\n  <mat-toolbar-row *ngFor=\\\"let list of lists\\\"  (click)=\\\"onSelectList(list)\\\" >\\n\\n      <span class=\\\"inline-block list-title\\\">{{list.title}}</span>\\n      <mat-chip-list class=\\\"inline-block \\\">\\n          <mat-chip color=\\\"primary\\\" selected matTooltip=\\\"All!\\\" matTooltipPosition=\\\"right\\\">{{list.counter }}</mat-chip>\\n      </mat-chip-list>\\n  </mat-toolbar-row>\\n</mat-toolbar>\\n\\n</div>\\n\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport * as TodoActions from '../../store/to-do.actions';\nimport * as fromReducer from '../../store/to-do.reducer';\nimport { AppState } from '../../app.state';\nimport { List } from '../models/List';\nimport { User } from 'src/app/user-managment/models/user';\n\n@Component({\n  selector: 'app-to-do-list',\n  templateUrl: './to-do-list.component.html',\n  styleUrls: ['./to-do-list.component.css']\n})\nexport class ToDoListComponent implements OnInit {\n  lists: List[];\n  addNewFlag = false;\n  newList: List;\n  user: User;\n  counter: number;\n\n  constructor( private store: Store<AppState>) {\n    store.select(fromReducer.getTodoList)\n    .subscribe((data: AppState) => {\n      if( data.user) {\n        this.lists = data.user.Lists;\n        this.user = data.user;\n        this.counter = data.counter;\n      }\n    });\n   }\n\n  ngOnInit() { }\n\n  onSelectList(list: List): void {\n    this.store.dispatch(new TodoActions.SetCurrentList(list));\n  }\n\n  addList(list: List): void {\n    this.store.dispatch(new TodoActions.AddNewList({ userId: this.user.id, title: list.title }));\n    this.addNewFlag = false;\n  }\n\n  toggleAdd(){\n    this.newList = new List();\n    this.addNewFlag = true;\n  }\n}\n","module.exports = \"ul{\\r\\n  list-style:none;\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n}\\r\\n\\r\\n.task-completed{\\r\\n  display: inline-block;\\r\\n  position: relative;\\r\\n  float: right;\\r\\n}\\r\\n\\r\\n.pseudo-link{\\r\\n  cursor: pointer;\\r\\n  text-decoration: underline;\\r\\n  color: blue;\\r\\n}\\r\\n\\r\\n.menu{\\r\\n  min-width:340px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdG9kby90by1kby10YXNrcy90by1kby10YXNrcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBZTtFQUNmLFNBQVM7RUFDVCxVQUFVO0FBQ1o7O0FBRUE7RUFDRSxxQkFBcUI7RUFDckIsa0JBQWtCO0VBQ2xCLFlBQVk7QUFDZDs7QUFFQTtFQUNFLGVBQWU7RUFDZiwwQkFBMEI7RUFDMUIsV0FBVztBQUNiOztBQUNBO0VBQ0UsZUFBZTtBQUNqQiIsImZpbGUiOiJzcmMvYXBwL3RvZG8vdG8tZG8tdGFza3MvdG8tZG8tdGFza3MuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInVse1xyXG4gIGxpc3Qtc3R5bGU6bm9uZTtcclxuICBtYXJnaW46IDA7XHJcbiAgcGFkZGluZzogMDtcclxufVxyXG5cclxuLnRhc2stY29tcGxldGVke1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgZmxvYXQ6IHJpZ2h0O1xyXG59XHJcblxyXG4ucHNldWRvLWxpbmt7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG4gIGNvbG9yOiBibHVlO1xyXG59XHJcbi5tZW51e1xyXG4gIG1pbi13aWR0aDozNDBweDtcclxufSJdfQ== */\"","module.exports = \"<div  *ngIf=\\\"list\\\">\\n\\n  <div class=\\\"menu\\\">\\n\\n  {{list.title}}\\n  <mat-chip-list class=\\\"inline-block\\\">\\n      <mat-chip color=\\\"accent\\\" selected  matTooltip=\\\"Non completed!\\\" matTooltipPosition=\\\"right\\\">{{len}}</mat-chip>\\n  </mat-chip-list>\\n</div>\\n<app-new-task></app-new-task>\\n<mat-checkbox [checked]=\\\"onlyNonCompleted\\\" (change)=\\\"onlyNonCompleted=!onlyNonCompleted\\\">\\n   Non conmpleted only\\n  </mat-checkbox>\\n<span class=\\\"task-completed\\\">\\n  <a mat-button routerLink=\\\".\\\" (click)=\\\"removeCompleted()\\\">remove completed</a>\\n</span>\\n<mat-divider></mat-divider>\\n\\n<ul >\\n    <li *ngFor=\\\"let task of tasks| nonCompleted: onlyNonCompleted  \\\">\\n\\n      <app-to-do-item [task]=\\\"task\\\"></app-to-do-item>\\n    </li>\\n</ul>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../app.state';\nimport { Task } from '../models/task';\nimport { TaskStatus } from '../../shared/task-status.enum';\nimport * as fromReducer from '../../store/to-do.reducer';\nimport * as TodoActions from '../../store/to-do.actions';\nimport { List } from '../models/List';\n\n@Component({\n  selector: 'app-to-do-tasks',\n  templateUrl: './to-do-tasks.component.html',\n  styleUrls: ['./to-do-tasks.component.css']\n})\nexport class ToDoTasksComponent implements OnInit {\n\n  tasks: Task[];\n  len: number;\n  list: List;\n  onlyNonCompleted = false;\n\n  constructor(private store: Store<AppState>) {\n\n    store.select(fromReducer.getTodoList)\n      .subscribe((d) => {\n        if (d.list) {\n          this.tasks = d.list.tasks;\n          this.list = d.list;\n          if (this.tasks) {\n            //TODO: find a way to use pipe\n            this.len = (this.tasks.filter(t => t.status === TaskStatus.NORMAL)).length;\n\n          }\n        }\n      });\n  }\n\n  ngOnInit() {\n  }\n\n  removeCompleted(): void {\n    this.store.dispatch(new TodoActions.RemovAllDoneTask({ list: this.list }));\n  }\n}\n","module.exports = \".user-title{\\r\\n  height: 250px;\\r\\n  padding: 10%;\\r\\n}\\r\\n\\r\\np{\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci1tYW5hZ21lbnQvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7RUFDYixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkIiLCJmaWxlIjoic3JjL2FwcC91c2VyLW1hbmFnbWVudC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnVzZXItdGl0bGV7XHJcbiAgaGVpZ2h0OiAyNTBweDtcclxuICBwYWRkaW5nOiAxMCU7XHJcbn1cclxuXHJcbnB7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuIl19 */\"","module.exports = \" <div class=\\\"user-title\\\">\\n<form class=\\\"example-form\\\">\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput placeholder=\\\"Your name\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\"/>\\n    </mat-form-field>\\n    <button mat-raised-button (click)=\\\"login()\\\" >Login</button>\\n\\n  </form>\\n  <input matInput placeholder=\\\"Your name\\\" [(ngModel)]=\\\"newuser\\\" />\\n  <a mat-button routerLink=\\\".\\\" (click)=\\\"signup()\\\">Signup</a>\\n\\n<div *ngIf=\\\"user\\\">\\n  <p>Welcome back {{user.name}}</p>\\n\\n</div>\\n\\n</div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { User } from '../models/user';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../app.state';\nimport * as TodoActions from '../../store/to-do.actions';\nimport * as fromReducer from '../../store/to-do.reducer';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n  username: string;\n  newuser: string;\n  user: User;\n\n  constructor( private store: Store<AppState>) {\n    this.store.select(fromReducer.getTodoList).\n    subscribe((data: AppState) => this.user = data.user);\n  }\n\n  ngOnInit() {\n  }\n\n  login(): void {\n    this.store.dispatch(new TodoActions.UserLogin({name: this.username}));\n    }\n\n    signup(): void {\n      this.store.dispatch(new TodoActions.Signup({name: this.newuser}));\n    }\n}\n","import { List } from '../../todo/models/List';\r\n\r\nexport class User {\r\n  name: string;\r\n  Lists: List[];\r\n  id: string;\r\n\r\n  constructor(values: Object = {}) {\r\n    Object.assign(this, values);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n\n  apiUrl: 'http://localhost:4000',\n  httpsHeaders:{  'Content-Type':  'application/json'}\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}